class Actor {
    tick() {
    }
    hold() {
    }
    release() {
    }
    click1() {
    }
    click2() {
    }
    click3() {
    }
    destroy() {
    }
}

class Hand extends Actor {
    constructor(right) {
        super();
        this.points = 0;
        this.right = right;
    }
    hold() {
        if(border.visibility) {
            this.points++;
            if(this.points >= 10) {
                border.material.diffuseTexture = assets.textures[9].texture;
                border.material.opacityTexture = border.material.diffuseTexture;
                this.points = 0;
                if(traceHit.pickedMesh.name == 'chunk')
                    setBlock(pickBlock(), 0, this.right);
                else
                    socket.emit('destroy', traceHit.pickedMesh.uniqueId);
            }
            else { 
                border.material.diffuseTexture = assets.textures[this.points-1].texture;
                border.material.opacityTexture = border.material.diffuseTexture;
            }
        }       
    }
    release() {
        this.points = 0;
        border.material.diffuseTexture = assets.textures[0].texture;
        border.material.opacityTexture = border.material.diffuseTexture;
    } 
}

class Block extends Actor {
    constructor(right, id) {
        super();
        this.id = id;
        this.right = right;
    }
    click1() {
        if(border.visibility)
            setBlock(pickBlock(true), this.id, this.right);
    }
}

class Buildable extends Block {
    constructor(right, id) {
        super();
        this.id = id;
        this.right = right;
        this.model = clone(assets.actor[this.id].mesh);
        this.model.backFaceCulling = false;
        this.model.isPickable = false;
    } 
    tick() {
        if(traceHit) {
            if(traceHit.distance <= 7) {
                this.model.visibility = 0.4;
                this.model.position = pickBlock(true);
            }
            else
                this.model.visibility = false;
        }
    }   
    click1() {
        if(this.model.visibility) {
            /*var model = clone(assets.items[this.id].mesh);
            model.position.x = this.model.position.x;
            model.position.y = this.model.position.y;
            model.position.z = this.model.position.z;*/
            setActor(this.model.position, this.model.rotation, this.id);
        } 
    }
    click2() {
        if(this.model.visibility) {
            this.model.rotation.y += Math.PI/2;
            if(this.model.rotation.y >= 2*Math.PI)
                this.model.rotation.y = 0;
        } 
    }
    destroy() {
        this.model.dispose();
    }
}